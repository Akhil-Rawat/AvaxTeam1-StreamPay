// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt,
} from "@graphprotocol/graph-ts";

export class ProviderRegistered extends ethereum.Event {
  get params(): ProviderRegistered__Params {
    return new ProviderRegistered__Params(this);
  }
}

export class ProviderRegistered__Params {
  _event: ProviderRegistered;

  constructor(event: ProviderRegistered) {
    this._event = event;
  }

  get provider(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get name(): string {
    return this._event.parameters[1].value.toString();
  }
}

export class PlanCreated extends ethereum.Event {
  get params(): PlanCreated__Params {
    return new PlanCreated__Params(this);
  }
}

export class PlanCreated__Params {
  _event: PlanCreated;

  constructor(event: PlanCreated) {
    this._event = event;
  }

  get planId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get provider(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get price(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }

  get interval(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }
}

export class SubscriptionCreated extends ethereum.Event {
  get params(): SubscriptionCreated__Params {
    return new SubscriptionCreated__Params(this);
  }
}

export class SubscriptionCreated__Params {
  _event: SubscriptionCreated;

  constructor(event: SubscriptionCreated) {
    this._event = event;
  }

  get subscriptionId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get user(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get planId(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }
}

export class PaymentProcessed extends ethereum.Event {
  get params(): PaymentProcessed__Params {
    return new PaymentProcessed__Params(this);
  }
}

export class PaymentProcessed__Params {
  _event: PaymentProcessed;

  constructor(event: PaymentProcessed) {
    this._event = event;
  }

  get from(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get to(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get amount(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }

  get subscriptionId(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }
}

export class ProviderEarnings extends ethereum.Event {
  get params(): ProviderEarnings__Params {
    return new ProviderEarnings__Params(this);
  }
}

export class ProviderEarnings__Params {
  _event: ProviderEarnings;

  constructor(event: ProviderEarnings) {
    this._event = event;
  }

  get provider(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get planId(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get amount(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }
}

export class EscrowDeposit extends ethereum.Event {
  get params(): EscrowDeposit__Params {
    return new EscrowDeposit__Params(this);
  }
}

export class EscrowDeposit__Params {
  _event: EscrowDeposit;

  constructor(event: EscrowDeposit) {
    this._event = event;
  }

  get user(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get amount(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get newBalance(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }
}

export class EscrowWithdrawal extends ethereum.Event {
  get params(): EscrowWithdrawal__Params {
    return new EscrowWithdrawal__Params(this);
  }
}

export class EscrowWithdrawal__Params {
  _event: EscrowWithdrawal;

  constructor(event: EscrowWithdrawal) {
    this._event = event;
  }

  get user(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get amount(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get newBalance(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }
}

export class SubscriptionEscrow extends ethereum.SmartContract {
  static bind(address: Address): SubscriptionEscrow {
    return new SubscriptionEscrow("SubscriptionEscrow", address);
  }

  initialize(): boolean {
    let result = super.call("initialize", "initialize():(bool)", []);

    return result[0].toBoolean();
  }

  try_initialize(): ethereum.CallResult<boolean> {
    let result = super.tryCall("initialize", "initialize():(bool)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  registerProvider(name: string): boolean {
    let result = super.call(
      "registerProvider",
      "registerProvider(string):(bool)",
      [ethereum.Value.fromString(name)],
    );

    return result[0].toBoolean();
  }

  try_registerProvider(name: string): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "registerProvider",
      "registerProvider(string):(bool)",
      [ethereum.Value.fromString(name)],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  createPlan(price: BigInt, interval: BigInt, _metadata_hash: string): BigInt {
    let result = super.call(
      "createPlan",
      "createPlan(uint256,uint256,string):(uint256)",
      [
        ethereum.Value.fromUnsignedBigInt(price),
        ethereum.Value.fromUnsignedBigInt(interval),
        ethereum.Value.fromString(_metadata_hash),
      ],
    );

    return result[0].toBigInt();
  }

  try_createPlan(
    price: BigInt,
    interval: BigInt,
    _metadata_hash: string,
  ): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "createPlan",
      "createPlan(uint256,uint256,string):(uint256)",
      [
        ethereum.Value.fromUnsignedBigInt(price),
        ethereum.Value.fromUnsignedBigInt(interval),
        ethereum.Value.fromString(_metadata_hash),
      ],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  processSubscriptionPayment(subscription_id: BigInt): boolean {
    let result = super.call(
      "processSubscriptionPayment",
      "processSubscriptionPayment(uint256):(bool)",
      [ethereum.Value.fromUnsignedBigInt(subscription_id)],
    );

    return result[0].toBoolean();
  }

  try_processSubscriptionPayment(
    subscription_id: BigInt,
  ): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "processSubscriptionPayment",
      "processSubscriptionPayment(uint256):(bool)",
      [ethereum.Value.fromUnsignedBigInt(subscription_id)],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  getUserBalance(user: Address): BigInt {
    let result = super.call(
      "getUserBalance",
      "getUserBalance(address):(uint256)",
      [ethereum.Value.fromAddress(user)],
    );

    return result[0].toBigInt();
  }

  try_getUserBalance(user: Address): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "getUserBalance",
      "getUserBalance(address):(uint256)",
      [ethereum.Value.fromAddress(user)],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  isProviderRegistered(provider: Address): boolean {
    let result = super.call(
      "isProviderRegistered",
      "isProviderRegistered(address):(bool)",
      [ethereum.Value.fromAddress(provider)],
    );

    return result[0].toBoolean();
  }

  try_isProviderRegistered(provider: Address): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "isProviderRegistered",
      "isProviderRegistered(address):(bool)",
      [ethereum.Value.fromAddress(provider)],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  getPlans(): Array<BigInt> {
    let result = super.call("getPlans", "getPlans():(uint256[])", []);

    return result[0].toBigIntArray();
  }

  try_getPlans(): ethereum.CallResult<Array<BigInt>> {
    let result = super.tryCall("getPlans", "getPlans():(uint256[])", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigIntArray());
  }

  withdraw(amount: BigInt): boolean {
    let result = super.call("withdraw", "withdraw(uint256):(bool)", [
      ethereum.Value.fromUnsignedBigInt(amount),
    ]);

    return result[0].toBoolean();
  }

  try_withdraw(amount: BigInt): ethereum.CallResult<boolean> {
    let result = super.tryCall("withdraw", "withdraw(uint256):(bool)", [
      ethereum.Value.fromUnsignedBigInt(amount),
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }
}

export class InitializeCall extends ethereum.Call {
  get inputs(): InitializeCall__Inputs {
    return new InitializeCall__Inputs(this);
  }

  get outputs(): InitializeCall__Outputs {
    return new InitializeCall__Outputs(this);
  }
}

export class InitializeCall__Inputs {
  _call: InitializeCall;

  constructor(call: InitializeCall) {
    this._call = call;
  }
}

export class InitializeCall__Outputs {
  _call: InitializeCall;

  constructor(call: InitializeCall) {
    this._call = call;
  }

  get value0(): boolean {
    return this._call.outputValues[0].value.toBoolean();
  }
}

export class RegisterProviderCall extends ethereum.Call {
  get inputs(): RegisterProviderCall__Inputs {
    return new RegisterProviderCall__Inputs(this);
  }

  get outputs(): RegisterProviderCall__Outputs {
    return new RegisterProviderCall__Outputs(this);
  }
}

export class RegisterProviderCall__Inputs {
  _call: RegisterProviderCall;

  constructor(call: RegisterProviderCall) {
    this._call = call;
  }

  get name(): string {
    return this._call.inputValues[0].value.toString();
  }
}

export class RegisterProviderCall__Outputs {
  _call: RegisterProviderCall;

  constructor(call: RegisterProviderCall) {
    this._call = call;
  }

  get value0(): boolean {
    return this._call.outputValues[0].value.toBoolean();
  }
}

export class CreatePlanCall extends ethereum.Call {
  get inputs(): CreatePlanCall__Inputs {
    return new CreatePlanCall__Inputs(this);
  }

  get outputs(): CreatePlanCall__Outputs {
    return new CreatePlanCall__Outputs(this);
  }
}

export class CreatePlanCall__Inputs {
  _call: CreatePlanCall;

  constructor(call: CreatePlanCall) {
    this._call = call;
  }

  get price(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get interval(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get _metadata_hash(): string {
    return this._call.inputValues[2].value.toString();
  }
}

export class CreatePlanCall__Outputs {
  _call: CreatePlanCall;

  constructor(call: CreatePlanCall) {
    this._call = call;
  }

  get value0(): BigInt {
    return this._call.outputValues[0].value.toBigInt();
  }
}

export class SubscribeCall extends ethereum.Call {
  get inputs(): SubscribeCall__Inputs {
    return new SubscribeCall__Inputs(this);
  }

  get outputs(): SubscribeCall__Outputs {
    return new SubscribeCall__Outputs(this);
  }
}

export class SubscribeCall__Inputs {
  _call: SubscribeCall;

  constructor(call: SubscribeCall) {
    this._call = call;
  }

  get plan_id(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class SubscribeCall__Outputs {
  _call: SubscribeCall;

  constructor(call: SubscribeCall) {
    this._call = call;
  }

  get value0(): BigInt {
    return this._call.outputValues[0].value.toBigInt();
  }
}

export class ProcessSubscriptionPaymentCall extends ethereum.Call {
  get inputs(): ProcessSubscriptionPaymentCall__Inputs {
    return new ProcessSubscriptionPaymentCall__Inputs(this);
  }

  get outputs(): ProcessSubscriptionPaymentCall__Outputs {
    return new ProcessSubscriptionPaymentCall__Outputs(this);
  }
}

export class ProcessSubscriptionPaymentCall__Inputs {
  _call: ProcessSubscriptionPaymentCall;

  constructor(call: ProcessSubscriptionPaymentCall) {
    this._call = call;
  }

  get subscription_id(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class ProcessSubscriptionPaymentCall__Outputs {
  _call: ProcessSubscriptionPaymentCall;

  constructor(call: ProcessSubscriptionPaymentCall) {
    this._call = call;
  }

  get value0(): boolean {
    return this._call.outputValues[0].value.toBoolean();
  }
}

export class DepositCall extends ethereum.Call {
  get inputs(): DepositCall__Inputs {
    return new DepositCall__Inputs(this);
  }

  get outputs(): DepositCall__Outputs {
    return new DepositCall__Outputs(this);
  }
}

export class DepositCall__Inputs {
  _call: DepositCall;

  constructor(call: DepositCall) {
    this._call = call;
  }
}

export class DepositCall__Outputs {
  _call: DepositCall;

  constructor(call: DepositCall) {
    this._call = call;
  }

  get value0(): boolean {
    return this._call.outputValues[0].value.toBoolean();
  }
}

export class WithdrawCall extends ethereum.Call {
  get inputs(): WithdrawCall__Inputs {
    return new WithdrawCall__Inputs(this);
  }

  get outputs(): WithdrawCall__Outputs {
    return new WithdrawCall__Outputs(this);
  }
}

export class WithdrawCall__Inputs {
  _call: WithdrawCall;

  constructor(call: WithdrawCall) {
    this._call = call;
  }

  get amount(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class WithdrawCall__Outputs {
  _call: WithdrawCall;

  constructor(call: WithdrawCall) {
    this._call = call;
  }

  get value0(): boolean {
    return this._call.outputValues[0].value.toBoolean();
  }
}
